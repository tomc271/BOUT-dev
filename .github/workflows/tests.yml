name: Tests
on:
  push:
  pull_request:
  schedule:
    # run sunday moring
    - cron: '30 6 * * 0'

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - name: "Debug, shared"
            os: ubuntu-latest
            cmake_options: "-DCHECK=4 -DCMAKE_BUILD_TYPE=Debug -DBOUT_ENABLE_SIGNAL=ON -DBOUT_ENABLE_TRACK=ON -DBOUT_USE_PETSC=ON -DBOUT_USE_SLEPC=ON -DBOUT_USE_SUNDIALS=ON -DBOUT_USE_HYPRE=ON -DSUNDIALS_ROOT=/home/runner/local -DPETSC_DIR=/home/runner/local/petsc -DSLEPC_DIR=/home/runner/local/slepc"
            build_petsc: petsc-true
            build_petsc_branch: v3.23.3
            unit_only: ""
            on_cron: false
            omp_num_threads: 2
    env:
      BOUT_TEST_TIMEOUT: 6m
      OMP_NUM_THREADS: ${{ matrix.config.omp_num_threads }}
      PYTHONPATH: ${{ github.workspace }}/tools/pylib
      OMPI_MCA_rmaps_base_oversubscribe: yes
      PRTE_MCA_rmaps_default_mapping_policy: ":oversubscribe"
      MPIRUN: mpiexec -np

    steps:
      - uses: actions/checkout@v4
      - name: Inspect build script
        run: |
          cat -n .build_petsc_for_ci.sh
          wc -l .build_petsc_for_ci.sh
      - name: Fix script line endings
        run: |
          sudo apt install -y dos2unix
          dos2unix .build_petsc_for_ci.sh
          chmod +x .build_petsc_for_ci.sh
      - name: Verify BUILD_PETSC
        run: |
          echo "BUILD_PETSC=${{ matrix.config.build_petsc }}"
          echo "BUILD_PETSC=${{ matrix.config.build_petsc }}" >> $GITHUB_ENV
      - name: Install base dependencies
        run: |
          sudo apt update
          sudo apt install -y gfortran libfftw3-dev libnetcdf-dev libnetcdf-c++4-dev netcdf-bin python3 python3-pip python3-pytest python3-numpy python3-scipy lcov openmpi-bin libopenmpi-dev liblapack-dev libparpack2-dev libhypre-dev
      - name: Install system PETSc/SLEPc for non-custom jobs
        if: matrix.config.build_petsc == ''
        run: sudo apt install -y petsc-dev slepc-dev
      - name: Build PETSc/SLEPc
        if: matrix.config.build_petsc != ''
        run: |
          echo "Starting PETSc/SLEPc build"
          ./.build_petsc_for_ci.sh ${{ matrix.config.build_petsc_branch }} || { echo "PETSc build script failed"; exit 1; }
      - name: Debug PETSc installation
        run: |
          echo "Checking PETSc installation:"
          ls -la /home/runner/local/petsc /home/runner/local/petsc/include /home/runner/local/petsc/lib || echo "PETSc directory missing"
          echo "Checking SLEPc installation:"
          ls -la /home/runner/local/slepc /home/runner/local/slepc/lib || echo "SLEPc directory missing"
          echo "Checking system PETSc:"
          find /usr/lib -name petscmat.h || echo "No system petscmat.h found"
      - name: Check MatFDColoringSetFunction
        run: |
          echo "MatFDColoringSetFunction declaration (custom PETSc):"
          if [ -f "/home/runner/local/petsc/include/petscmat.h" ]; then
            cat /home/runner/local/petsc/include/petscmat.h | grep -A 2 -B 2 MatFDColoringSetFunction
          else
            echo "Error: petscmat.h not found at /home/runner/local/petsc/include"
          fi
          echo "MatFDColoringSetFunction declaration (system PETSc):"
          SYSTEM_PETSC_PATH=$(find /usr/lib -name petscmat.h 2>/dev/null || echo "")
          if [ -n "$SYSTEM_PETSC_PATH" ]; then
            cat "$SYSTEM_PETSC_PATH" | grep -A 2 -B 2 MatFDColoringSetFunction
          else
            echo "No system petscmat.h found"
          fi
      - name: Clear CMake cache
        run: rm -rf build
      - name: Build BOUT++
        run: UNIT_ONLY=${{ matrix.config.unit_only }} ./.ci_with_cmake.sh ${{ matrix.config.cmake_options }}
